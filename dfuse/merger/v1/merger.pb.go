// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dfuse/merger/v1/merger.proto

package v1

import (
	context "context"
	fmt "fmt"
	v1 "github.com/eoscanada/pbgo/dfuse/bstream/v1"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	LowBlockNum          uint64   `protobuf:"varint,1,opt,name=lowBlockNum,proto3" json:"lowBlockNum,omitempty"`
	HighBlockID          string   `protobuf:"bytes,2,opt,name=highBlockID,proto3" json:"highBlockID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f1327e68c6db98d, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetLowBlockNum() uint64 {
	if m != nil {
		return m.LowBlockNum
	}
	return 0
}

func (m *Request) GetHighBlockID() string {
	if m != nil {
		return m.HighBlockID
	}
	return ""
}

type Response struct {
	Found                bool        `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	Blocks               []*v1.Block `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f1327e68c6db98d, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetFound() bool {
	if m != nil {
		return m.Found
	}
	return false
}

func (m *Response) GetBlocks() []*v1.Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "dfuse.merger.v1.Request")
	proto.RegisterType((*Response)(nil), "dfuse.merger.v1.Response")
}

func init() { proto.RegisterFile("dfuse/merger/v1/merger.proto", fileDescriptor_0f1327e68c6db98d) }

var fileDescriptor_0f1327e68c6db98d = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0xe9, 0xd4, 0x3a, 0xb3, 0x87, 0x41, 0x10, 0xac, 0x43, 0xa4, 0xec, 0xa9, 0x22, 0x24,
	0x74, 0x7e, 0x83, 0x21, 0x82, 0x0f, 0x93, 0x99, 0x47, 0xdf, 0x9a, 0xf6, 0xae, 0x1d, 0xae, 0xbd,
	0x35, 0x7f, 0xea, 0xd7, 0x97, 0x26, 0x11, 0xc6, 0xd8, 0x5b, 0xce, 0xb9, 0xbf, 0x5c, 0xce, 0xb9,
	0xe4, 0xa1, 0xda, 0x59, 0x0d, 0xbc, 0x05, 0x55, 0x83, 0xe2, 0x43, 0x1e, 0x5e, 0xac, 0x57, 0x68,
	0x90, 0xce, 0xdd, 0x94, 0x05, 0x6f, 0xc8, 0x17, 0x8f, 0x1e, 0x97, 0xda, 0x28, 0x28, 0xda, 0x91,
	0x0f, 0x4f, 0xff, 0x61, 0xb9, 0x21, 0xd7, 0x02, 0x7e, 0x2c, 0x68, 0x43, 0x53, 0x32, 0x3b, 0xe0,
	0xef, 0xfa, 0x80, 0xe5, 0xf7, 0x87, 0x6d, 0x93, 0x28, 0x8d, 0xb2, 0x4b, 0x71, 0x6c, 0x8d, 0x44,
	0xb3, 0xaf, 0x1b, 0xa7, 0xdf, 0x5f, 0x93, 0x49, 0x1a, 0x65, 0x37, 0xe2, 0xd8, 0x5a, 0x7e, 0x92,
	0xa9, 0x00, 0xdd, 0x63, 0xa7, 0x81, 0xde, 0x92, 0xab, 0x1d, 0xda, 0xae, 0x72, 0x9b, 0xa6, 0xc2,
	0x0b, 0xca, 0x49, 0x2c, 0x47, 0x58, 0x27, 0x93, 0xf4, 0x22, 0x9b, 0xad, 0xee, 0x98, 0x8f, 0xfc,
	0x1f, 0x6b, 0xc8, 0x99, 0x5b, 0x26, 0x02, 0xb6, 0xda, 0x92, 0x78, 0xe3, 0xea, 0xd0, 0x37, 0x32,
	0xdf, 0x2a, 0x70, 0xa2, 0x72, 0x8c, 0xa6, 0x09, 0x3b, 0x29, 0xcc, 0x42, 0x9b, 0xc5, 0xfd, 0x99,
	0x89, 0x0f, 0xb6, 0x7e, 0xfe, 0x7a, 0xaa, 0xf7, 0xa6, 0xb1, 0x92, 0x95, 0xd8, 0x72, 0x40, 0x5d,
	0x16, 0x5d, 0x51, 0x15, 0xbc, 0x97, 0x35, 0xf2, 0x93, 0xf3, 0xca, 0xd8, 0xdd, 0xe9, 0xe5, 0x2f,
	0x00, 0x00, 0xff, 0xff, 0x3a, 0xdf, 0x76, 0x5a, 0x78, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MergerClient is the client API for Merger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MergerClient interface {
	PreMergedBlocks(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type mergerClient struct {
	cc *grpc.ClientConn
}

func NewMergerClient(cc *grpc.ClientConn) MergerClient {
	return &mergerClient{cc}
}

func (c *mergerClient) PreMergedBlocks(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/dfuse.merger.v1.Merger/PreMergedBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MergerServer is the server API for Merger service.
type MergerServer interface {
	PreMergedBlocks(context.Context, *Request) (*Response, error)
}

// UnimplementedMergerServer can be embedded to have forward compatible implementations.
type UnimplementedMergerServer struct {
}

func (*UnimplementedMergerServer) PreMergedBlocks(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreMergedBlocks not implemented")
}

func RegisterMergerServer(s *grpc.Server, srv MergerServer) {
	s.RegisterService(&_Merger_serviceDesc, srv)
}

func _Merger_PreMergedBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MergerServer).PreMergedBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfuse.merger.v1.Merger/PreMergedBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MergerServer).PreMergedBlocks(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Merger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dfuse.merger.v1.Merger",
	HandlerType: (*MergerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PreMergedBlocks",
			Handler:    _Merger_PreMergedBlocks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dfuse/merger/v1/merger.proto",
}
