// Copyright 2019 dfuse Platform Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dfuse/abicodec/eth/v1/abicodec.proto

package pbabicodec

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DecodeMethodRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Input                []byte   `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecodeMethodRequest) Reset()         { *m = DecodeMethodRequest{} }
func (m *DecodeMethodRequest) String() string { return proto.CompactTextString(m) }
func (*DecodeMethodRequest) ProtoMessage()    {}
func (*DecodeMethodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8151afb920c20ebd, []int{0}
}

func (m *DecodeMethodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecodeMethodRequest.Unmarshal(m, b)
}
func (m *DecodeMethodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecodeMethodRequest.Marshal(b, m, deterministic)
}
func (m *DecodeMethodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeMethodRequest.Merge(m, src)
}
func (m *DecodeMethodRequest) XXX_Size() int {
	return xxx_messageInfo_DecodeMethodRequest.Size(m)
}
func (m *DecodeMethodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeMethodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeMethodRequest proto.InternalMessageInfo

func (m *DecodeMethodRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *DecodeMethodRequest) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

type DecodeMethodResponse struct {
	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// Parameters is actually a JSON payload of the decoded parameters
	ParametersJson       string   `protobuf:"bytes,2,opt,name=parametersJson,proto3" json:"parametersJson,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecodeMethodResponse) Reset()         { *m = DecodeMethodResponse{} }
func (m *DecodeMethodResponse) String() string { return proto.CompactTextString(m) }
func (*DecodeMethodResponse) ProtoMessage()    {}
func (*DecodeMethodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8151afb920c20ebd, []int{1}
}

func (m *DecodeMethodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecodeMethodResponse.Unmarshal(m, b)
}
func (m *DecodeMethodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecodeMethodResponse.Marshal(b, m, deterministic)
}
func (m *DecodeMethodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeMethodResponse.Merge(m, src)
}
func (m *DecodeMethodResponse) XXX_Size() int {
	return xxx_messageInfo_DecodeMethodResponse.Size(m)
}
func (m *DecodeMethodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeMethodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeMethodResponse proto.InternalMessageInfo

func (m *DecodeMethodResponse) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *DecodeMethodResponse) GetParametersJson() string {
	if m != nil {
		return m.ParametersJson
	}
	return ""
}

func init() {
	proto.RegisterType((*DecodeMethodRequest)(nil), "dfuse.abicodec.eth.v1.DecodeMethodRequest")
	proto.RegisterType((*DecodeMethodResponse)(nil), "dfuse.abicodec.eth.v1.DecodeMethodResponse")
}

func init() {
	proto.RegisterFile("dfuse/abicodec/eth/v1/abicodec.proto", fileDescriptor_8151afb920c20ebd)
}

var fileDescriptor_8151afb920c20ebd = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xcd, 0x4a, 0xc5, 0x30,
	0x10, 0x85, 0xa9, 0xa0, 0x97, 0x0e, 0xc5, 0x45, 0xbc, 0x42, 0x11, 0x17, 0x97, 0x8b, 0x48, 0x51,
	0x48, 0xa9, 0xbe, 0x81, 0xe8, 0x46, 0x70, 0x93, 0xa5, 0xb8, 0x49, 0x9b, 0xb1, 0xed, 0xc2, 0x24,
	0x66, 0x26, 0x7d, 0x7e, 0xb1, 0xb5, 0xf5, 0x87, 0x2e, 0x5c, 0x9e, 0x8f, 0xc3, 0x97, 0x9c, 0x81,
	0x0b, 0xf3, 0x1a, 0x09, 0x4b, 0x5d, 0xf7, 0x8d, 0x33, 0xd8, 0x94, 0xc8, 0x5d, 0x39, 0x54, 0x4b,
	0x96, 0x3e, 0x38, 0x76, 0xe2, 0x74, 0x6c, 0xc9, 0x85, 0x22, 0x77, 0x72, 0xa8, 0xf6, 0x0f, 0x70,
	0x72, 0x8f, 0x9f, 0xe4, 0x09, 0xb9, 0x73, 0x46, 0xe1, 0x7b, 0x44, 0x62, 0x91, 0xc3, 0x46, 0x1b,
	0x13, 0x90, 0x28, 0x4f, 0x76, 0x49, 0x91, 0xaa, 0x39, 0x8a, 0x2d, 0x1c, 0xf6, 0xd6, 0x47, 0xce,
	0x0f, 0x76, 0x49, 0x91, 0xa9, 0x29, 0xec, 0x5f, 0x60, 0xfb, 0x5b, 0x43, 0xde, 0x59, 0x42, 0x71,
	0x0e, 0x29, 0xf5, 0xad, 0xd5, 0x1c, 0x03, 0x7e, 0x99, 0xbe, 0x81, 0xb8, 0x84, 0x63, 0xaf, 0x83,
	0x7e, 0x43, 0xc6, 0x40, 0x8f, 0xe4, 0xec, 0x28, 0x4d, 0xd5, 0x1f, 0x7a, 0x13, 0x60, 0x33, 0xd9,
	0x83, 0x68, 0x21, 0xfb, 0xf9, 0x90, 0xb8, 0x92, 0xab, 0xbb, 0xe4, 0xca, 0xa8, 0xb3, 0xeb, 0x7f,
	0x75, 0xa7, 0x9f, 0xdf, 0x65, 0xcf, 0xe0, 0xeb, 0xb9, 0x59, 0x1f, 0x8d, 0x47, 0xbc, 0xfd, 0x08,
	0x00, 0x00, 0xff, 0xff, 0xe1, 0xa2, 0x7e, 0x06, 0x6c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DecoderClient is the client API for Decoder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DecoderClient interface {
	DecodeMethod(ctx context.Context, in *DecodeMethodRequest, opts ...grpc.CallOption) (*DecodeMethodResponse, error)
}

type decoderClient struct {
	cc *grpc.ClientConn
}

func NewDecoderClient(cc *grpc.ClientConn) DecoderClient {
	return &decoderClient{cc}
}

func (c *decoderClient) DecodeMethod(ctx context.Context, in *DecodeMethodRequest, opts ...grpc.CallOption) (*DecodeMethodResponse, error) {
	out := new(DecodeMethodResponse)
	err := c.cc.Invoke(ctx, "/dfuse.abicodec.eth.v1.Decoder/DecodeMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DecoderServer is the server API for Decoder service.
type DecoderServer interface {
	DecodeMethod(context.Context, *DecodeMethodRequest) (*DecodeMethodResponse, error)
}

// UnimplementedDecoderServer can be embedded to have forward compatible implementations.
type UnimplementedDecoderServer struct {
}

func (*UnimplementedDecoderServer) DecodeMethod(ctx context.Context, req *DecodeMethodRequest) (*DecodeMethodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecodeMethod not implemented")
}

func RegisterDecoderServer(s *grpc.Server, srv DecoderServer) {
	s.RegisterService(&_Decoder_serviceDesc, srv)
}

func _Decoder_DecodeMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecodeMethodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DecoderServer).DecodeMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfuse.abicodec.eth.v1.Decoder/DecodeMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DecoderServer).DecodeMethod(ctx, req.(*DecodeMethodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Decoder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dfuse.abicodec.eth.v1.Decoder",
	HandlerType: (*DecoderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DecodeMethod",
			Handler:    _Decoder_DecodeMethod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dfuse/abicodec/eth/v1/abicodec.proto",
}
